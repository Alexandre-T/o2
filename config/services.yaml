# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'fr'
    expediter: '%env(MAILER_EXPEDITER)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # Listener to hash the user password when necessary.
    App\Listener\HashPasswordListener:
        class: App\Listener\HashPasswordListener
        autowire: true
        tags:
            - { name: doctrine.event_subscriber }

    # Listener to get the next number for bill.
    App\Listener\BillNumberGeneratorListener:
        class: App\Listener\BillNumberGeneratorListener
        autowire: true
        tags:
            - { name: doctrine.event_subscriber }

    # Payment Listener to change order.
    App\Listener\PaymentListener:
        class: App\Listener\PaymentListener
        autowire: true
        tags:
            - { name: 'kernel.event_listener', event: 'payment_instruction.state_change', method: 'onPaymentInstructionStateChange' }
            - { name: 'kernel.event_listener', event: 'payment.state_change', method: 'onPaymentStateChange' }

    #Mailer come with parameters. Autowire is not available.
    App\Mailer\Mailer:
        arguments:
            - '@swiftmailer.mailer'
            - '@router'
            - '@templating'
            - parameters:
                from: '%expediter%'

    App\Controller\CicController:
        arguments: ['@logger']
        tags:
            - { name: monolog.logger, channel: tpe }
            - 'controller.service_arguments'

    #TPE COnfiguration
    App\Model\TpeConfig:
        arguments:
            - parameters:
                  bank: '%env(MONETICO_BANK)%'
                  mode: '%env(MONETICO_MODE)%'
                  tpe: '%env(MONETICO_TPE)%'
                  key: '%env(MONETICO_KEY)%'
                  company: '%env(MONETICO_COMPANY)%'
                  debug: '%env(MONETICO_DEBUG)%'

    #Voters are tagged
    App\Security\Voter\:
        resource: '../src/Security/Voter'
        tags: ['security.voter']

    #Twig extension for localized date functions
    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
